name: Integração contínua de Java com Maven e SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Ambiente de desenvolvimento
  build-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Realiza o checkout do repositório
        uses: actions/checkout@v3

      - name: Configura o JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven

      - name: Compila o projeto com Maven
        run: mvn -B compile --file pom.xml

  # Ambiente de homologação
  build-hmg:
    runs-on: ubuntu-latest
    environment:
      name: hmg
    needs: build-dev
    steps:
      - name: Realiza o checkout do repositório
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configura o JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven

      - name: Instala o Xvfb
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Configura a variável DISPLAY
        run: export DISPLAY=:99

      - name: Inicia o servidor Xvfb
        run: Xvfb :99 -screen 0 1024x768x24 &

      - name: Testa o projeto com Maven (usando xvfb e LAF seguro)
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" \
          mvn -B test --file pom.xml -Dswing.defaultlaf=javax.swing.plaf.metal.MetalLookAndFeel

      - name: Cache dos pacotes do SonarCloud
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache dos pacotes do Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Verifica o projeto com Jacoco e Sonar (com LAF seguro)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean verify \
            -Dswing.defaultlaf=javax.swing.plaf.metal.MetalLookAndFeel \
            org.jacoco:jacoco-maven-plugin:prepare-agent \
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=HenriqueBent0_a3_unisul \
            -Dsonar.organization=henriquebent0 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  # Ambiente de produção
  build-prd:
    runs-on: ubuntu-latest
    environment:
      name: prd
    needs: build-hmg
    steps:
      - name: Realiza o checkout do repositório
        uses: actions/checkout@v3

      - name: Configura o JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven

      - name: Empacota o projeto com Maven
        run: mvn -B package --file pom.xml -DskipTests

      - name: Crie uma pasta temporária de downloads de artefatos
        run: mkdir staging

      - name: Copia os artefatos a serem publicados na pasta temporária
        run: cp target/*jar-with-dependencies.jar staging

      - name: Usa Upload Artifact do GitHub Action
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging
